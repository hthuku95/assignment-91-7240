content='from django.db import models\nfrom django.contrib.auth import get_user_model\nfrom django.core.validators import MinValueValidator, DecimalValidator\nfrom django.utils import timezone\nfrom decimal import Decimal\nimport uuid\n\nUser = get_user_model()\n\n\nclass Order(models.Model):\n    """\n    Model representing a customer order\n    """\n    STATUS_CHOICES = [\n        (\'pending\', \'Pending\'),\n        (\'processing\', \'Processing\'),\n        (\'shipped\', \'Shipped\'),\n        (\'delivered\', \'Delivered\'),\n        (\'cancelled\', \'Cancelled\'),\n        (\'refunded\', \'Refunded\'),\n    ]\n\n    PAYMENT_STATUS_CHOICES = [\n        (\'pending\', \'Pending\'),\n        (\'paid\', \'Paid\'),\n        (\'failed\', \'Failed\'),\n        (\'refunded\', \'Refunded\'),\n        (\'partially_refunded\', \'Partially Refunded\'),\n    ]\n\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order_number = models.CharField(max_length=20, unique=True, editable=False)\n    user = models.ForeignKey(\n        User,\n        on_delete=models.CASCADE,\n        related_name=\'orders\',\n        help_text=\'User who placed the order\'\n    )\n    \n    # Order details\n    status = models.CharField(\n        max_length=20,\n        choices=STATUS_CHOICES,\n        default=\'pending\',\n        db_index=True\n    )\n    payment_status = models.CharField(\n        max_length=20,\n        choices=PAYMENT_STATUS_CHOICES,\n        default=\'pending\',\n        db_index=True\n    )\n    \n    # Pricing\n    subtotal = models.DecimalField(\n        max_digits=10,\n        decimal_places=2,\n        validators=[MinValueValidator(Decimal(\'0.00\'))],\n        help_text=\'Order subtotal before tax and shipping\'\n    )\n    tax_amount = models.DecimalField(\n        max_digits=10,\n        decimal_places=2,\n        default=Decimal(\'0.00\'),\n        validators=[MinValueValidator(Decimal(\'0.00\'))]\n    )\n    shipping_cost = models.DecimalField(\n        max_digits=10,\n        decimal_places=2,\n        default=Decimal(\'0.00\'),\n        validators=[MinValueValidator(Decimal(\'0.00\'))]\n    )\n    discount_amount = models.DecimalField(\n        max_digits=10,\n        decimal_places=2,\n        default=Decimal(\'0.00\'),\n        validators=[MinValueValidator(Decimal(\'0.00\'))]\n    )\n    total_amount = models.DecimalField(\n        max_digits=10,\n        decimal_places=2,\n        validators=[MinValueValidator(Decimal(\'0.00\'))],\n        help_text=\'Final order total\'\n    )\n    \n    # Shipping information\n    shipping_first_name = models.CharField(max_length=50)\n    shipping_last_name = models.CharField(max_length=50)\n    shipping_address_line1 = models.CharField(max_length=255)\n    shipping_address_line2 = models.CharField(max_length=255, blank=True)\n    shipping_city = models.CharField(max_length=100)\n    shipping_state = models.CharField(max_length=100)\n    shipping_postal_code = models.CharField(max_length=20)\n    shipping_country = models.CharField(max_length=100)\n    shipping_phone = models.CharField(max_length=20, blank=True)\n    \n    # Billing information\n    billing_first_name = models.CharField(max_length=50)\n    billing_last_name = models.CharField(max_length=50)\n    billing_address_line1 = models.CharField(max_length=255)\n    billing_address_line2 = models.CharField(max_length=255, blank=True)\n    billing_city = models.CharField(max_length=100)\n    billing_state = models.CharField(max_length=100)\n    billing_postal_code = models.CharField(max_' additional_kwargs={} response_metadata={'id': 'msg_019FD8ncStjhEBXcUr8Aez1o', 'model': 'claude-sonnet-4-20250514', 'stop_reason': 'max_tokens', 'stop_sequence': None, 'usage': {'cache_creation_input_tokens': 0, 'cache_read_input_tokens': 0, 'input_tokens': 405, 'output_tokens': 1024, 'service_tier': 'standard'}} id='run--b317d45f-b75e-4e86-983b-34a4931eedd0-0' usage_metadata={'input_tokens': 405, 'output_tokens': 1024, 'total_tokens': 1429, 'input_token_details': {'cache_read': 0, 'cache_creation': 0}}